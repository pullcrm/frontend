import{bt as i}from"./index.90ead00b.js";function c(n,t){return new Date(n.step).getTime()-new Date(t.step).getTime()}function r(n){const{count:t,online:a,offline:e,completed:s,appointments:o}=n;return{total:t||0,online:a||0,offline:e||0,completed:s||0,appointments:o.sort(c)}}function l(n){const{amount:t,procedures:a,actualIncome:e,potentialIncome:s}=n;return{total:t,income:e,average:s,procedures:p(a)}}function p(n){return n.map(t=>({name:t.name,total:t.amount,online:t.online,income:t.actualIncome,offline:t.offline,average:t.potentialIncome,avgPrice:t.avgPrice}))}const f=i("analytics",{state:()=>({dates:null,simpleStats:null,financeStats:null,appointmentsStats:null}),getters:{appointmentsList:n=>{var t;return(t=n.appointmentsStats)==null?void 0:t.appointments}},actions:{async fetchSimpleStats({date:n}){const[t,a]=await Promise.all([this.fetchForDay(n),this.fetchForMonth(n)]);this.simpleStats={dayTotal:t.total,monthTotal:a.total,monthAverage:a.average}},async fetchAppointmentsStats({startDate:n,endDate:t}){const a=await this.$api.analytics.calendar({startDate:n,endDate:t});this.appointmentsStats=r(a)},async fetchFinanceStats({startDate:n,endDate:t,specialistId:a}){const e=await this.$api.analytics.finance({endDate:t,startDate:n,specialistId:a});this.financeStats=l(e)},async fetchForMonth(n){const t=n.daysInMonth();return await this.$api.analytics.simple({startDate:n.format("YYYY-MM-01"),endDate:n.format(`YYYY-MM-${t}`)})},async fetchForDay(n){return await this.$api.analytics.simple({startDate:n.format("YYYY-MM-DD"),endDate:n.format("YYYY-MM-DD")})}}});export{f as u};
