var L=Object.defineProperty,P=Object.defineProperties;var Y=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var m=(t,e,s)=>e in t?L(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,f=(t,e)=>{for(var s in e||(e={}))w.call(e,s)&&m(t,s,e[s]);if(p)for(var s of p(e))y.call(e,s)&&m(t,s,e[s]);return t},d=(t,e)=>P(t,Y(e));import{bu as l}from"./index.53588f62.js";import{g as o,f as $}from"./date-time.d466b3fd.js";const E="IN_PROGRESS",S="CANCELED",T="COMPLETED",O="IN_QUEUE",q={[E]:"\u0412 \u0440\u043E\u0431\u043E\u0442\u0456",[S]:"\u0412\u0456\u0434\u043C\u0456\u043D\u0435\u043D\u043E",[T]:"\u0412\u0438\u043A\u043E\u043D\u0430\u043D\u043E",[O]:"\u0412 \u0447\u0435\u0440\u0437\u0456"},z={ADMIN_PANEL:"\u0410\u0434\u043C\u0456\u043D \u043F\u0430\u043D\u0435\u043B\u044C",WIDGET:"\u0412\u0456\u0434\u0436\u0435\u0442"};function h(t){var c;const{date:e,total:s,phone:i,status:a,fullName:u,startTime:n,specialist:C,procedures:g,description:A,specialistId:r,hasRemindSMS:I,hasCreationSMS:M}=t;return{date:e.format("YYYY-MM-DD"),total:s,phone:i||void 0,status:a,fullName:u,startTime:(c=n&&`${n}:00`)!=null?c:null,procedures:g.map(({id:N})=>N),description:A,specialistId:r!=null?r:C.id,hasRemindSMS:I,hasCreationSMS:M}}function G({procedures:t}){return t.reduce((e,{duration:s})=>e+s,0)}function x(t){const{procedures:e,description:s}=t;let i=e.map(({name:a})=>a).join(", ");return s&&(i+=`
\u041A\u043E\u043C\u0435\u043D\u0442\u0430\u0440: ${s}`),i}const D=l("appointments",{state:()=>({queue:[],appointments:[]}),getters:{appointmentsDict:t=>t.appointments.reduce((e,s)=>d(f({},e),{[s.id]:s}),{}),appointmentById(){return t=>this.appointmentsDict[t]}},actions:{async fetch(){const t=_(),e=await this.$api.appointments.all({date:t.date,status:[E,S,T]});this.appointments=e},async fetchQueue(){const t=await this.$api.appointments.all({status:[O]});this.queue=t},async create(t){const e=h(t);await this.$api.appointments.create(e)},async update(t){const{id:e}=t,s=h(t);await this.$api.appointments.update(e,s)}}});function R(t){return t.map(e=>{const{id:s,description:i,specialistId:a,endDateTime:u,startDateTime:n}=e;return{id:s,description:i,specialistId:a,endTime:o(u),startTime:o(n),endDateTime:u,startDateTime:n}})}function B({startDateTime:t,endDateTime:e},s){const i=o(e),a=o(t);return i===s.to&&a===s.from}const _=l("schedule",{state:()=>({date:$(new Date,"YYYY-MM-DD"),timeOffs:[],isLoading:!1}),getters:{normalizeTimeOffs:t=>R(t.timeOffs)},actions:{async fetch(){const t=D();this.isLoading=!0,this.reset(),await Promise.all([this.fetchTimeOffs(),t.fetch(),t.fetchQueue()]),this.isLoading=!1},async fetchTimeOffs(){const t=await this.$api.timeOff.all({date:this.date});this.timeOffs=t},reset(){const t=D();this.timeOffs=[],t.appointments=[]}}});export{T as C,O as I,D as a,E as b,z as c,G as d,S as e,x as g,B as i,q as s,_ as u};
